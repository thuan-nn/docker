version: '3'
networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  docker-in-docker:
    driver: ${VOLUMES_DRIVER}

services:
  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - PHP_FPM_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_DEPLOYER=${PHP_FPM_INSTALL_DEPLOYER}
        - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_FFMPEG=${PHP_FPM_INSTALL_FFMPEG}
    working_dir: /var/www
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/custom/custom.ini:/usr/local/etc/php/conf.d/custom.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - docker-in-docker:/certs/client
    ports:
      - "${PHP_FPM_XDEBUG_PORT}:9003"
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2376
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
      - FAKETIME=${PHP_FPM_FAKETIME}
    networks:
      - backend
  ### PHP Worker ############################################
  php-worker:
    build:
      context: ./php-worker
      args:
        - PHP_WORKER_VERSION=${PHP_VERSION}
        - INSTALL_IMAGEMAGICK=${PHP_WORKER_INSTALL_IMAGEMAGICK}
        - INSTALL_MEMCACHED=${PHP_WORKER_INSTALL_MEMCACHED}
        - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
        - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
        - PUID=${PHP_WORKER_PUID}
        - PGID=${PHP_WORKER_PGID}
        - IMAGEMAGICK_VERSION=${PHP_WORKER_IMAGEMAGICK_VERSION}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - php-fpm
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend
  ### Apache Server ########################################
  apache2:
    build:
      context: ./apache2
      args:
        - FOR_M1=${FOR_M1}
        - DOCUMENT_ROOT=${WEB_DOCUMENT_ROOT}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${APACHE_HOST_LOG_PATH}:/var/log/apache2
      - ${APACHE_SITES_PATH}:/etc/apache2/sites-available
      - ${APACHE_SSL_PATH}:/etc/apache2/ssl
    ports:
      - "${APACHE_HOST_HTTP_PORT}:81"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
  ### NGINX ################################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${APP_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  ### Mariadb ################################################
  mariadb:
    image: mariadb:10.3
    # build:
    #   context: ./mariadb
    #   args:
    #     - MARIADB_VERSION=${MYSQL_VERSION}
    environment:
      # - MARIADB_DATABASE=${MYSQL_DATABASE}
      # - MARIADB_USER=${MYSQL_USER}
      # - MARIADB_PASSWORD=${MYSQL_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${APP_TIMEZONE}
    volumes:
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    networks:
      - backend
  ### Minio ################################################
  minio:
    build: ./minio
    volumes:
      - ${DATA_PATH_HOST}/minio/data:/export
      - ${DATA_PATH_HOST}/minio/config:/root/.minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
      - frontend
      - backend
  ### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
  ### Redis Cluster ##########################################
  redis-cluster:
    build: ./redis-cluster
    ports:
      - "${REDIS_CLUSTER_PORT_RANGE}:7000-7005"
    networks:
      - backend
  ### REDISWEBUI ################################################
  redis-webui:
    build:
      context: ./redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_AUTH=${REDIS_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - backend
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis
  ### elasticsearch ################################################
  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./elasticsearch
      args:
        - ELK_VERSION=${ELK_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/elasticsearch:/data
    environment:
      - cluster.name=docker-cluster
      - node.name=docker-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - indices.id_field_data.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=docker-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
       - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
       - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
    depends_on:
       - php-fpm
    networks:
       - frontend
       - backend
### Kibana ##############################################
  kibana:
    build:
      context: ./kibana
      args:
       - ELK_VERSION=${ELK_VERSION}
    ports:
       - "${KIBANA_HTTP_PORT}:5601"
    depends_on:
       - elasticsearch
    networks:
       - frontend
       - backend
  ### Portainer ################################################
  portainer:
    build:
      context: ./portainer
    volumes:
      - ${DATA_PATH_HOST}/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - 9010:9000
    networks:
      - backend
  ### Docker-in-Docker ################################################
  docker-in-docker:
    image: docker:20.10-dind
    environment:
      DOCKER_TLS_SAN: DNS:docker-in-docker
    privileged: true
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - docker-in-docker:/certs/client
    expose:
      - 2375
    networks:
      - backend